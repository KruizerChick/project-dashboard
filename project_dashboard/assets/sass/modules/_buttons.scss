/* =========================
    Buttons
   ========================= */
/*
* Styles from Unicorn Buttons CSS button library
* Source: https://github.com/alexwolfe/Buttons
* Website: http://unicorn-ui.com/buttons/
 */

// Compass (optional)
/* Unicorn Buttons recommends the use of autoprefixer instead of Compass
* when using buttons. However, buttons does support Compass.
* simply change $btn-use-compass to true and uncomment the
* @import 'compass' code below to use Compass.
*/
$btn-use-compass: false;

// Button Namespace
$btn-namespace: '.button' !default; //prefix for all classes

// Button Defaults
$btn-bgcolor: #EEE !default;
$btn-font-color: #666 !default;
$btn-font-weight: 300 !default;
$btn-font-size: 16px !default;
$btn-height: 40px !default;
$btn-font-family: "Helvetica Neue Light", "Helvetica Neue", Helvetica, Arial, "Lucida Grande", sans-serif  !default;

// Button Colors
/*
* $btn-colors is used to generate the different button colors.
* Edit or add colors to the list below and recompile.
* Each block contains the (name, background, color)
* The class is generated using the name: (ex .button-primary)
*/


$btn-colors:
  ('primary' $blue  #FFF)
  ('plain' $lightBtn $heading)
  ('inverse' #222 #EEE)
  ('action' $secondary-color-01  #FFF)
  ('highlight' #FEAE1B #FFF)
  ('caution' $red #FFF)
  ('royal' #7B72E9 #FFF)
  ('black' $black #fff)
  !default;

// Button Shapes
$btn-shapes:
  (square 0)
  (box 10px)
  (rounded 4px)
  (pill 200px)
  (circle 100%) !default;

// Button Sizes
$btn-sizes:
  (giant 1.75)
  (jumbo 1.5)
  (large 1.25)
  (normal 1)
  (small .75)
  (tiny .6) !default;

// Color Mixin - Iterates through the list of colors and creates
@mixin colors($type-namespace) {
  #{$type-namespace} {
    @each $btn-color in $btn-colors {
      $btn-name: nth($btn-color, 1);
      $btn-background: nth($btn-color, 2);
      $btn-color: nth($btn-color, 3);
      $btn-color-namespace: $btn-namespace + '-' + $btn-name;

      &#{$btn-color-namespace} {
        @content;
      }
    }
  }
}

// No Animation - Sets animation property to none
@mixin no_animation {
  animation-name: none;
}

// Clearfix Mixin -  Clears floats inside the container
@mixin clearfix {
  &:after {
    content: " ";
    display: block;
    clear: both;
  }
}

// Base Layout Styles
#{$btn-namespace}-block,
#{$btn-namespace}-stacked {
  display: block;
  width: 100%;
}

// Base Button Style - Default values for the .button class
#{$btn-namespace} {
  color: $btn-font-color;
  background-color: $btn-bgcolor;
  border-color: $btn-bgcolor;
  font-weight: $btn-font-weight;
  font-size: $btn-font-size;
  font-family: $btn-font-family;
  text-decoration: none;
  text-align: center;
  line-height: $btn-height;
  height: $btn-height;
  padding: 0 $btn-height;
  margin: 0;
  display: inline-block;
  appearance: none;
  cursor: pointer;
  border: none;
  box-sizing: border-box;

  // Compass Mixins
  @if $btn-use-compass {
    @include transition-property(all);
    @include transition-duration(.3s);
  }
  @else {
    transition-property: all;
    transition-duration:.3s;
  }


  &:visited {
    color: $btn-font-color;
  }

  &:hover,
  &:focus {
    background-color: lighten($btn-bgcolor, 3%);
    text-decoration: none;
    outline: none;
  }

  &:active,
  &.active,
  &.is-active {
    text-shadow: 0 1px 0 rgba(255, 255, 255, .3);
    text-decoration: none;
    background-color: desaturate($btn-bgcolor, 10%);
    border-color: darken($btn-bgcolor, 12%);
    color: darken($btn-bgcolor, 10%);

    // Compass Mixin
    @if $btn-use-compass {
      @include transition-duration(0s);
      @include box-shadow(inset 0 1px 3px rgba(0, 0, 0, .2));
    }
    @else {
      transition-duration: 0s;
      box-shadow: inset 0 1px 3px rgba(0, 0, 0, .2);
    }
  }

  //Disabled State
  /*
  * The disabled state uses the class .disabled, is-disabled,
  * and the form attribute disabled="disabled".
  * The use of !important is only added because this is a state
  * that must be applied to all buttons when in a disabled state.
  */
  &.disabled,
  &.is-disabled,
  &:disabled {
    top: 0 !important;
    background: #EEE !important;
    border: 1px solid #DDD !important;
    text-shadow: 0 1px 1px rgba(255, 255, 255, 1) !important;
    color: #CCC !important;
    cursor: default !important;
    appearance: none !important;

    // Compass Mixin
    @if $btn-use-compass {
      @include box-shadow(0 1px 2px rgba(0, 0, 0, .10) !important);
      @include opacity(.8 !important);
    }
    @else {
      box-shadow: none !important;
      opacity:.8 !important;
    }
  }
}


// Base Button Tyography
#{$btn-namespace}-uppercase {
  text-transform: uppercase;
}
#{$btn-namespace}-lowercase {
  text-transform: lowercase;
}
#{$btn-namespace}-capitalize {
  text-transform: capitalize;
}
#{$btn-namespace}-small-caps {
  font-variant: small-caps;
}

#{$btn-namespace}-icon-txt-large {
  font-size: 36px !important;
}

// Base padding
#{$btn-namespace}-width-small {
  padding: 0 10px !important;
}

// Base Colors
/* Create colors for buttons (.button-primary, .button-secondary, etc.) */
@each $btn-color in $btn-colors {
  $btn-name: nth($btn-color, 1);
  $btn-background: nth($btn-color, 2);
  $btn-color: nth($btn-color, 3);

  // Create class for .button-primary
  // and legacy flat .button-primary-flat
  #{$btn-namespace}-#{$btn-name},
  #{$btn-namespace}-#{$btn-name}-flat {
    background-color: $btn-background;
    border-color: $btn-background;
    color: $btn-color;

    &:visited {
      color: $btn-color;
    }

    &:hover,
    &:focus {
      background-color: lighten($btn-background, 10%);
      border-color: lighten($btn-background, 10%);
      color: $btn-color;
    }

    &:active,
    &.active,
    &.is-active {
      background-color: desaturate($btn-background, 10%);
      border-color: desaturate($btn-background, 10%);
      color: darken($btn-background, 10%);
    }
  }
}


// Button Types (optional)
/*
* All of the files below represent the various button
* types (including shapes & sizes). None of these files
* are required. Simple remove the uneeded type below and
* the button type will be excluded from the final build
*/

@import 'types/shapes';
@import 'types/border';
@import 'types/borderless';
@import 'types/raised';
@import 'types/3d';
@import 'types/glow';
@import 'types/dropdown';
@import 'types/groups';
@import 'types/wrapper';
@import 'types/longshadow';
@import 'types/sizes';
