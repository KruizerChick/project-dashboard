# Generated by Django 2.0.5 on 2018-05-15 19:32

from django.conf import settings
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import project_dashboard.core.utils.time


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('projects', '0004_auto_20180515_1052'),
    ]

    operations = [
        migrations.CreateModel(
            name='IssueStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='name')),
                ('slug', models.SlugField(blank=True, max_length=255, verbose_name='slug')),
                ('order', models.IntegerField(default=10, verbose_name='order')),
                ('is_closed', models.BooleanField(default=False, verbose_name='is closed')),
                ('color', models.CharField(default='#999999', max_length=20, verbose_name='color')),
            ],
            options={
                'verbose_name': 'issue status',
                'verbose_name_plural': 'issue statuses',
                'ordering': ['project', 'order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='IssueType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='name')),
                ('order', models.IntegerField(default=10, verbose_name='order')),
                ('color', models.CharField(default='#999999', max_length=20, verbose_name='color')),
            ],
            options={
                'verbose_name': 'issue type',
                'verbose_name_plural': 'issue types',
                'ordering': ['project', 'order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Priority',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='name')),
                ('order', models.IntegerField(default=10, verbose_name='order')),
                ('color', models.CharField(default='#999999', max_length=20, verbose_name='color')),
            ],
            options={
                'verbose_name': 'priority',
                'verbose_name_plural': 'priorities',
                'ordering': ['project', 'order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Severity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='name')),
                ('order', models.IntegerField(default=10, verbose_name='order')),
                ('color', models.CharField(default='#999999', max_length=20, verbose_name='color')),
            ],
            options={
                'verbose_name': 'severity',
                'verbose_name_plural': 'severities',
                'ordering': ['project', 'order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='TaskStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='name')),
                ('slug', models.SlugField(blank=True, max_length=255, verbose_name='slug')),
                ('order', models.IntegerField(default=10, verbose_name='order')),
                ('is_closed', models.BooleanField(default=False, verbose_name='is closed')),
                ('color', models.CharField(default='#999999', max_length=20, verbose_name='color')),
            ],
            options={
                'verbose_name': 'task status',
                'verbose_name_plural': 'task statuses',
                'ordering': ['project', 'order', 'name'],
            },
        ),
        migrations.AlterModelOptions(
            name='project',
            options={'ordering': ['name', 'id'], 'verbose_name': 'project', 'verbose_name_plural': 'projects'},
        ),
        migrations.AddField(
            model_name='project',
            name='anon_permissions',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.TextField(choices=[('view_project', 'View project'), ('view_milestones', 'View milestones'), ('view_epics', 'View epic'), ('view_us', 'View user stories'), ('view_tasks', 'View tasks'), ('view_issues', 'View issues'), ('view_wiki_pages', 'View wiki pages'), ('view_wiki_links', 'View wiki links')]), blank=True, default=[], null=True, size=None, verbose_name='anonymous permissions'),
        ),
        migrations.AddField(
            model_name='project',
            name='is_backlog_activated',
            field=models.BooleanField(default=True, verbose_name='active backlog panel'),
        ),
        migrations.AddField(
            model_name='project',
            name='is_contact_activated',
            field=models.BooleanField(default=True, verbose_name='active contact'),
        ),
        migrations.AddField(
            model_name='project',
            name='is_issues_activated',
            field=models.BooleanField(default=True, verbose_name='active issues panel'),
        ),
        migrations.AddField(
            model_name='project',
            name='is_kanban_activated',
            field=models.BooleanField(default=False, verbose_name='active kanban panel'),
        ),
        migrations.AddField(
            model_name='project',
            name='is_private',
            field=models.BooleanField(default=True, verbose_name='is private'),
        ),
        migrations.AddField(
            model_name='project',
            name='is_wiki_activated',
            field=models.BooleanField(default=True, verbose_name='active wiki panel'),
        ),
        migrations.AddField(
            model_name='project',
            name='issues_csv_uuid',
            field=models.CharField(blank=True, db_index=True, default=None, editable=False, max_length=32, null=True),
        ),
        migrations.AddField(
            model_name='project',
            name='members',
            field=models.ManyToManyField(related_name='projects', through='projects.Membership', to=settings.AUTH_USER_MODEL, verbose_name='members'),
        ),
        migrations.AddField(
            model_name='project',
            name='public_permissions',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.TextField(choices=[('view_project', 'View project'), ('view_milestones', 'View milestones'), ('add_milestone', 'Add milestone'), ('modify_milestone', 'Modify milestone'), ('delete_milestone', 'Delete milestone'), ('view_epics', 'View epic'), ('add_epic', 'Add epic'), ('modify_epic', 'Modify epic'), ('comment_epic', 'Comment epic'), ('delete_epic', 'Delete epic'), ('view_us', 'View user story'), ('add_us', 'Add user story'), ('modify_us', 'Modify user story'), ('comment_us', 'Comment user story'), ('delete_us', 'Delete user story'), ('view_tasks', 'View tasks'), ('add_task', 'Add task'), ('modify_task', 'Modify task'), ('comment_task', 'Comment task'), ('delete_task', 'Delete task'), ('view_issues', 'View issues'), ('add_issue', 'Add issue'), ('modify_issue', 'Modify issue'), ('comment_issue', 'Comment issue'), ('delete_issue', 'Delete issue'), ('view_wiki_pages', 'View wiki pages'), ('add_wiki_page', 'Add wiki page'), ('modify_wiki_page', 'Modify wiki page'), ('comment_wiki_page', 'Comment wiki page'), ('delete_wiki_page', 'Delete wiki page'), ('view_wiki_links', 'View wiki links'), ('add_wiki_link', 'Add wiki link'), ('modify_wiki_link', 'Modify wiki link'), ('delete_wiki_link', 'Delete wiki link')]), blank=True, default=[], null=True, size=None, verbose_name='user permissions'),
        ),
        migrations.AddField(
            model_name='project',
            name='tasks_csv_uuid',
            field=models.CharField(blank=True, db_index=True, default=None, editable=False, max_length=32, null=True),
        ),
        migrations.AddField(
            model_name='project',
            name='total_activity',
            field=models.PositiveIntegerField(db_index=True, default=0, verbose_name='count'),
        ),
        migrations.AddField(
            model_name='project',
            name='total_activity_last_month',
            field=models.PositiveIntegerField(db_index=True, default=0, verbose_name='activity last month'),
        ),
        migrations.AddField(
            model_name='project',
            name='total_activity_last_week',
            field=models.PositiveIntegerField(db_index=True, default=0, verbose_name='activity last week'),
        ),
        migrations.AddField(
            model_name='project',
            name='total_activity_last_year',
            field=models.PositiveIntegerField(db_index=True, default=0, verbose_name='activity last year'),
        ),
        migrations.AddField(
            model_name='project',
            name='total_milestones',
            field=models.IntegerField(blank=True, null=True, verbose_name='total of milestones'),
        ),
        migrations.AddField(
            model_name='project',
            name='totals_updated_datetime',
            field=models.DateTimeField(db_index=True, default=django.utils.timezone.now, verbose_name='updated date time'),
        ),
        migrations.AlterField(
            model_name='membership',
            name='user_order',
            field=models.BigIntegerField(default=project_dashboard.core.utils.time.timestamp_ms, verbose_name='user order'),
        ),
        migrations.AddField(
            model_name='project',
            name='default_issue_status',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='projects.IssueStatus', verbose_name='default issue status'),
        ),
        migrations.AddField(
            model_name='project',
            name='default_issue_type',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='projects.IssueType', verbose_name='default issue type'),
        ),
        migrations.AddField(
            model_name='project',
            name='default_priority',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='projects.Priority', verbose_name='default priority'),
        ),
        migrations.AddField(
            model_name='project',
            name='default_severity',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='projects.Severity', verbose_name='default severity'),
        ),
        migrations.AddField(
            model_name='project',
            name='default_task_status',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='projects.TaskStatus', verbose_name='default task status'),
        ),
        migrations.AlterIndexTogether(
            name='project',
            index_together={('name', 'id')},
        ),
        migrations.AddField(
            model_name='taskstatus',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='task_statuses', to='projects.Project', verbose_name='project'),
        ),
        migrations.AddField(
            model_name='severity',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='severities', to='projects.Project', verbose_name='project'),
        ),
        migrations.AddField(
            model_name='priority',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='priorities', to='projects.Project', verbose_name='project'),
        ),
        migrations.AddField(
            model_name='issuetype',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='issue_types', to='projects.Project', verbose_name='project'),
        ),
        migrations.AddField(
            model_name='issuestatus',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='issue_statuses', to='projects.Project', verbose_name='project'),
        ),
        migrations.AlterUniqueTogether(
            name='taskstatus',
            unique_together={('project', 'name'), ('project', 'slug')},
        ),
        migrations.AlterUniqueTogether(
            name='severity',
            unique_together={('project', 'name')},
        ),
        migrations.AlterUniqueTogether(
            name='priority',
            unique_together={('project', 'name')},
        ),
        migrations.AlterUniqueTogether(
            name='issuetype',
            unique_together={('project', 'name')},
        ),
        migrations.AlterUniqueTogether(
            name='issuestatus',
            unique_together={('project', 'name'), ('project', 'slug')},
        ),
    ]
