# Generated by Django 2.0.5 on 2018-05-18 19:08

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    dependencies = [
        ('users', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('projects', '0002_auto_20180518_1240'),
    ]

    operations = [
        migrations.CreateModel(
            name='Stakeholder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(blank=True, max_length=50)),
                ('last_name', models.CharField(blank=True, max_length=50)),
                ('full_name', models.CharField(blank=True, max_length=100)),
                ('email_address', models.EmailField(blank=True, max_length=100, null=True)),
                ('title', models.CharField(blank=True, max_length=100)),
                ('organization', models.CharField(blank=True, help_text='(Optional) Company, business unit or department.', max_length=100)),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128)),
                ('impact', models.IntegerField(choices=[(5, 5), (4, 4), (3, 3), (2, 2), (1, 1)], default=1)),
                ('influence', models.IntegerField(choices=[(5, 5), (4, 4), (3, 3), (2, 2), (1, 1)], default=1)),
                ('risk_tolerance', models.IntegerField(choices=[(5, 5), (4, 4), (3, 3), (2, 2), (1, 1)], default=1)),
                ('needs', models.TextField(blank=True, help_text='Items that are NOT OPTIONAL for this Stakeholder.', null=True)),
                ('wants', models.TextField(blank=True, help_text='Items that are OPTIONAL for this Stakeholder.', null=True)),
                ('expectations', models.TextField(blank=True, help_text='Unusual or emphatic expectations that need to be noted.', null=True)),
                ('strategy', models.TextField(blank=True, help_text='Strategies and tactics to maximize positive influence and minimize negative influence.', null=True)),
            ],
            options={
                'ordering': ['-influence', '-impact'],
            },
        ),
        migrations.CreateModel(
            name='Status',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='name')),
                ('slug', models.SlugField(blank=True, max_length=255, verbose_name='slug')),
                ('order', models.IntegerField(default=10, verbose_name='order')),
                ('is_closed', models.BooleanField(default=False, verbose_name='is closed')),
                ('color', models.CharField(default='#999999', max_length=20, verbose_name='color')),
            ],
            options={
                'verbose_name': 'status',
                'verbose_name_plural': 'statuses',
                'ordering': ['project', 'order', 'name'],
            },
        ),
        migrations.AlterUniqueTogether(
            name='issuestatus',
            unique_together=set(),
        ),
        migrations.RemoveField(
            model_name='issuestatus',
            name='project',
        ),
        migrations.AlterUniqueTogether(
            name='taskstatus',
            unique_together=set(),
        ),
        migrations.RemoveField(
            model_name='taskstatus',
            name='project',
        ),
        migrations.RenameField(
            model_name='projecttemplate',
            old_name='created_date',
            new_name='date_created',
        ),
        migrations.RenameField(
            model_name='projecttemplate',
            old_name='modified_date',
            new_name='date_modified',
        ),
        migrations.RenameField(
            model_name='projecttemplate',
            old_name='issue_statuses',
            new_name='statuses',
        ),
        migrations.RemoveField(
            model_name='project',
            name='default_issue_status',
        ),
        migrations.RemoveField(
            model_name='project',
            name='default_task_status',
        ),
        migrations.RemoveField(
            model_name='projecttemplate',
            name='epic_custom_attributes',
        ),
        migrations.RemoveField(
            model_name='projecttemplate',
            name='epic_statuses',
        ),
        migrations.RemoveField(
            model_name='projecttemplate',
            name='is_backlog_activated',
        ),
        migrations.RemoveField(
            model_name='projecttemplate',
            name='is_contact_activated',
        ),
        migrations.RemoveField(
            model_name='projecttemplate',
            name='is_kanban_activated',
        ),
        migrations.RemoveField(
            model_name='projecttemplate',
            name='is_wiki_activated',
        ),
        migrations.RemoveField(
            model_name='projecttemplate',
            name='points',
        ),
        migrations.RemoveField(
            model_name='projecttemplate',
            name='task_statuses',
        ),
        migrations.RemoveField(
            model_name='projecttemplate',
            name='us_custom_attributes',
        ),
        migrations.AlterField(
            model_name='activity',
            name='status',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.Status'),
        ),
        migrations.DeleteModel(
            name='IssueStatus',
        ),
        migrations.DeleteModel(
            name='TaskStatus',
        ),
        migrations.AddField(
            model_name='status',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='statuses', to='projects.Project', verbose_name='project'),
        ),
        migrations.AddField(
            model_name='stakeholder',
            name='project',
            field=models.ForeignKey(help_text='Belongs to this project.', on_delete=django.db.models.deletion.CASCADE, related_name='stakeholders', to='projects.Project'),
        ),
        migrations.AddField(
            model_name='stakeholder',
            name='role',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.Role'),
        ),
        migrations.AddField(
            model_name='stakeholder',
            name='user',
            field=models.OneToOneField(blank=True, help_text='(Optional) Link to User if available', null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='project',
            name='default_status',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='projects.Status', verbose_name='default status'),
        ),
        migrations.AlterUniqueTogether(
            name='status',
            unique_together={('project', 'slug'), ('project', 'name')},
        ),
    ]
