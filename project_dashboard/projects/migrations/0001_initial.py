# Generated by Django 2.0.5 on 2018-05-22 19:10

from django.conf import settings
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=250, verbose_name='project')),
                ('slug', models.SlugField(blank=True, help_text='Used to create the project URL.', max_length=250, unique=True)),
                ('description', models.TextField(verbose_name='description')),
                ('is_closed', models.BooleanField(default=False, verbose_name='closed')),
                ('is_phased', models.BooleanField(default=False, verbose_name='phased')),
                ('anon_permissions', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(choices=[('view_project', 'View project'), ('view_milestones', 'View milestones'), ('view_epics', 'View epic'), ('view_us', 'View user stories'), ('view_tasks', 'View tasks'), ('view_issues', 'View issues'), ('view_wiki_pages', 'View wiki pages'), ('view_wiki_links', 'View wiki links')]), blank=True, default=[], null=True, size=None, verbose_name='anonymous permissions')),
                ('public_permissions', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(choices=[('view_project', 'View project'), ('view_milestones', 'View milestones'), ('add_milestone', 'Add milestone'), ('modify_milestone', 'Modify milestone'), ('delete_milestone', 'Delete milestone'), ('view_epics', 'View epic'), ('add_epic', 'Add epic'), ('modify_epic', 'Modify epic'), ('comment_epic', 'Comment epic'), ('delete_epic', 'Delete epic'), ('view_us', 'View user story'), ('add_us', 'Add user story'), ('modify_us', 'Modify user story'), ('comment_us', 'Comment user story'), ('delete_us', 'Delete user story'), ('view_tasks', 'View tasks'), ('add_task', 'Add task'), ('modify_task', 'Modify task'), ('comment_task', 'Comment task'), ('delete_task', 'Delete task'), ('view_issues', 'View issues'), ('add_issue', 'Add issue'), ('modify_issue', 'Modify issue'), ('comment_issue', 'Comment issue'), ('delete_issue', 'Delete issue'), ('view_wiki_pages', 'View wiki pages'), ('add_wiki_page', 'Add wiki page'), ('modify_wiki_page', 'Modify wiki page'), ('comment_wiki_page', 'Comment wiki page'), ('delete_wiki_page', 'Delete wiki page'), ('view_wiki_links', 'View wiki links'), ('add_wiki_link', 'Add wiki link'), ('modify_wiki_link', 'Modify wiki link'), ('delete_wiki_link', 'Delete wiki link')]), blank=True, default=[], null=True, size=None, verbose_name='user permissions')),
                ('login_required', models.BooleanField(default=False, help_text='Only authenticated users can view the project.', verbose_name='login required')),
                ('password', models.CharField(blank=True, help_text='Protects the project with a password.', max_length=50, verbose_name='password')),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='owned_projects', to=settings.AUTH_USER_MODEL, verbose_name='owner')),
                ('predecessors', models.ManyToManyField(blank=True, help_text='Projects that MUST be completed beforehand.', related_name='_project_predecessors_+', to='projects.Project', verbose_name='predecessor projects')),
                ('related', models.ManyToManyField(blank=True, help_text='Projects that are similar (but NOT dependent upon) this one.', related_name='_project_related_+', to='projects.Project', verbose_name='related projects')),
                ('successors', models.ManyToManyField(blank=True, help_text='Projects that depend on this one to complete.', related_name='_project_successors_+', to='projects.Project', verbose_name='successor projects')),
            ],
            options={
                'verbose_name': 'project',
                'verbose_name_plural': 'projects',
                'ordering': ['name', 'id'],
                'abstract': False,
            },
        ),
        migrations.AlterIndexTogether(
            name='project',
            index_together={('name', 'id')},
        ),
    ]
